name: Daily Pipeline

on:
  schedule:
    - cron: "0 22 * * *"  # UTC 22:00 = KST 07:00
  workflow_dispatch:
    inputs:
      dry_run:
        description: "드라이 런"
        required: true
        default: "true"

jobs:
  pipeline:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # ✅ 의존성 설치 단계 분리
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install requests beautifulsoup4
        shell: bash  # 가상환경 활성화 유지

      - name: Module A - Fetch & Preprocess
        env:
          NAVER_CLIENT_ID: ${{ secrets.NAVER_CLIENT_ID }}
          NAVER_CLIENT_SECRET: ${{ secrets.NAVER_CLIENT_SECRET }}
          DRY_RUN: ${{ inputs.dry_run }}
        run: |
          python src/module_a.py

      - name: Check A - Validate Output
        run: |
          # 파일 존재 여부 확인
          if ! ls data/news_clean_*.json 1> /dev/null 2>&1 || ! ls data/news_meta_*.json 1> /dev/null 2>&1; then
            echo "필수 파일이 생성되지 않았습니다."
            exit 1
          fi

          # 파일 목록 출력
          ls data/

          # 검증 스크립트 실행
          python src/check_a.py
        shell: /usr/bin/bash -e

      - name: Upload Artifacts
        if: success()  # ✅ 성공 시에만 업로드
        uses: actions/upload-artifact@v4
        with:
          name: module-a
          path: |
            data/news_clean_*.json
            data/news_meta_*.json
