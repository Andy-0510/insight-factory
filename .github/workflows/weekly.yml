name: Weekly Report Pipeline

permissions:
  contents: write

on:
  schedule:
    - cron: "0 22 * * 4" # 매주 목요일 22:00 UTC = 금요일 07:00 KST
  workflow_dispatch:

jobs:
  pipeline:
    runs-on: ubuntu-latest
    env:
      USE_PRO: 'false' # 일간 작업은 PRO 모드 비활성화 권장
      GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      HF_HOME: ~/.cache/huggingface

    steps:
      # --- 체크아웃, 캐시, 의존성 설치 ---
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: false
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: "requirements.txt"
      - name: Cache HuggingFace models
        uses: actions/cache@v4
        with:
          path: ~/.cache/huggingface
          key: ${{ runner.os }}-hfmodels
          restore-keys: |
            ${{ runner.os }}-hfmodels
      - name: Install dependencies & Fonts
        run: |
          pip install -r requirements.txt
          sudo apt-get update && sudo apt-get install -y fonts-nanum
      - name: Preflight | Check secrets
        run: |
          test -n "${{ secrets.GEMINI_API_KEY }}" || (echo "GEMINI_API_KEY 없음"; exit 1)
          if [ -z "${{ secrets.NAVER_CLIENT_ID }}" ] || [ -z "${{ secrets.NAVER_CLIENT_SECRET }}" ]; then
            echo "[WARN] NAVER API 키가 없습니다(옵션?)."
          fi
      
      # --- 주간 리포트에 필요한 LLM 분석 및 리포트 생성 ---
      - name: Run Weekly Analysis & Reporting
        run: |
          # 주간 LLM 분석 실행 (약한 신호, 토픽 요약 등)
          python -m scripts.future_insights 
          python -m src.module_c 
          # 주간 리포트 생성 (내부적으로 주간용 시각화도 함께 생성)
          python -m src.module_f.weekly_report
      
      # --- 결과물 아카이빙 및 커밋 ---
      - name: Archive and Commit Weekly Report
        run: |
          set -e
          DATE_KST=$(TZ=Asia/Seoul date +'%Y-%m-%d')
          OUTDIR="outputs/weekly/${DATE_KST}"
          mkdir -p "${OUTDIR}"
          
          cp outputs/weekly_report.md "${OUTDIR}/"
          cp outputs/weekly_report.html "${OUTDIR}/"
          cp outputs/fig/weekly_*.png "${OUTDIR}/" || true

          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add "${OUTDIR}"
          git commit -m "docs(weekly): report for ${DATE_KST}" || echo "No changes to commit"
          git pull --rebase
          git push