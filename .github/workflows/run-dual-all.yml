name: Dual Run (Pro + Lite, Full Modules)

on:
  workflow_dispatch:
    inputs:
      dry_run:
        description: "Module A 드라이런 여부(true/false)"
        required: true
        default: "true"

jobs:
  dual-run:
    runs-on: ubuntu-latest
    env:
      HF_HOME: ~/.cache/huggingface
      GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip
          cache-dependency-path: requirements.txt

      - name: Install deps (base + pro)
        shell: bash
        run: |
          python -m venv .venv
          source .venv/bin/activate
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          # Pro 의존성(설치 실패해도 계속)
          python -m pip install keybert sentence-transformers bertopic umap-learn hdbscan || true
          mkdir -p "${HF_HOME}"

      # -------- Module A --------
      - name: Module A - Fetch & Preprocess
        shell: bash
        env:
          DRY_RUN: ${{ inputs.dry_run || 'true' }}
          NAVER_CLIENT_ID: ${{ secrets.NAVER_CLIENT_ID }}
          NAVER_CLIENT_SECRET: ${{ secrets.NAVER_CLIENT_SECRET }}
        run: |
          source .venv/bin/activate
          python src/module_a.py

      - name: Check A minimal
        shell: bash
        run: |
          source .venv/bin/activate
          python - <<'PY'
          import glob, sys
          m = sorted(glob.glob("data/news_meta_*.json"))
          c = sorted(glob.glob("data/news_clean_*.json"))
          assert m and c, "news_meta_* / news_clean_* 가 필요합니다."
          print("OK:", m[-1], c[-1])
          PY

      - name: Prepare outputs dir
        run: mkdir -p outputs

      # -------- Module B: PRO --------
      - name: Module B (PRO)
        shell: bash
        env:
          USE_PRO: "true"
        run: |
          source .venv/bin/activate
          python src/module_b.py
          cp outputs/keywords.json outputs/keywords_pro.json || true
          cp outputs/run_meta_b.json outputs/run_meta_b_pro.json || true

      # -------- Module B: LITE --------
      - name: Module B (LITE)
        shell: bash
        env:
          USE_PRO: "false"
        run: |
          source .venv/bin/activate
          python src/module_b.py
          cp outputs/keywords.json outputs/keywords_lite.json || true
          cp outputs/run_meta_b.json outputs/run_meta_b_lite.json || true

      # -------- Module C: PRO --------
      - name: Module C (PRO)
        shell: bash
        env:
          USE_PRO: "true"
          GOOGLE_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
          source .venv/bin/activate
          python src/module_c.py
          cp outputs/topics.json            outputs/topics_pro.json || true
          cp outputs/trend_timeseries.json  outputs/trend_timeseries_pro.json || true
          cp outputs/trend_insights.json    outputs/trend_insights_pro.json || true
          cp outputs/run_meta_c.json        outputs/run_meta_c_pro.json || true

      # -------- Module C: LITE --------
      - name: Module C (LITE)
        shell: bash
        env:
          USE_PRO: "false"
        run: |
          source .venv/bin/activate
          python src/module_c.py
          cp outputs/topics.json            outputs/topics_lite.json || true
          cp outputs/trend_timeseries.json  outputs/trend_timeseries_lite.json || true
          cp outputs/trend_insights.json    outputs/trend_insights_lite.json || true
          cp outputs/run_meta_c.json        outputs/run_meta_c_lite.json || true

      # -------- Module D --------
      - name: Module D - Biz Opportunities (PRO+LITE 공용)
        shell: bash
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
          source .venv/bin/activate
          # 기본은 직전 실행 결과(=LITE)를 소비
          python src/module_d.py
          cp outputs/biz_opportunities.json outputs/biz_opportunities_lite.json || true
          # PRO 결과로도 한 번 더 생성(선택)
          cp outputs/keywords_pro.json outputs/keywords.json || true
          cp outputs/topics_pro.json   outputs/topics.json   || true
          python src/module_d.py
          cp outputs/biz_opportunities.json outputs/biz_opportunities_pro.json || true

      # -------- Module E --------
      - name: Module E - Build Report (LITE)
        shell: bash
        run: |
          source .venv/bin/activate
          # LITE 기준 리포트
          mv outputs/keywords_lite.json outputs/keywords.json || true
          mv outputs/topics_lite.json   outputs/topics.json   || true
          python src/module_e.py
          cp outputs/report.html outputs/report_lite.html || true
          cp outputs/report.md   outputs/report_lite.md   || true

      - name: Module E - Build Report (PRO)
        shell: bash
        run: |
          source .venv/bin/activate
          # PRO 기준 리포트
          mv outputs/keywords_pro.json outputs/keywords.json || true
          mv outputs/topics_pro.json   outputs/topics.json   || true
          python src/module_e.py
          cp outputs/report.html outputs/report_pro.html || true
          cp outputs/report.md   outputs/report_pro.md   || true

      # -------- Upload Artifacts --------
      - name: Upload Dual Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dual-full-${{ github.sha }}
          path: |
            outputs/keywords_pro.json
            outputs/keywords_lite.json
            outputs/run_meta_b_pro.json
            outputs/run_meta_b_lite.json
            outputs/topics_pro.json
            outputs/topics_lite.json
            outputs/trend_timeseries_pro.json
            outputs/trend_timeseries_lite.json
            outputs/trend_insights_pro.json
            outputs/trend_insights_lite.json
            outputs/run_meta_c_pro.json
            outputs/run_meta_c_lite.json
            outputs/biz_opportunities_pro.json
            outputs/biz_opportunities_lite.json
            outputs/report_pro.html
            outputs/report_pro.md
            outputs/report_lite.html
            outputs/report_lite.md
          if-no-files-found: warn
